(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{237:function(v,_,a){"use strict";a.r(_);var t=a(0),e=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[v._v("#")])]),v._v(" "),a("h2",{attrs:{id:"数据类型的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型的分类"}},[v._v("#")]),v._v(" 数据类型的分类")]),v._v(" "),a("ul",[a("li",[v._v("基本数据类型\n"),a("ul",[a("li",[a("code",[v._v("number")]),v._v("     允许的值：任意数字")]),v._v(" "),a("li",[a("code",[v._v("string")]),v._v("     允许的值：任意字符串")]),v._v(" "),a("li",[a("code",[v._v("boolean")]),v._v("    允许的值："),a("code",[v._v("true")]),v._v("`false`")]),v._v(" "),a("li",[a("code",[v._v("null")]),v._v("       允许的值："),a("code",[v._v("null")])]),v._v(" "),a("li",[a("code",[v._v("undefined")]),v._v("  允许的值："),a("code",[v._v("undefined")])])])]),v._v(" "),a("li",[v._v("引用（对象）数据类型\n"),a("ul",[a("li",[v._v("普通对象   （"),a("code",[v._v("object")]),v._v("）")]),v._v(" "),a("li",[v._v("数组        "),a("code",[v._v("Array")]),v._v("实例对象")]),v._v(" "),a("li",[v._v("函数        "),a("code",[v._v("Function")]),v._v("实例对象")])])])]),v._v(" "),a("h2",{attrs:{id:"数据类型的判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型的判断"}},[v._v("#")]),v._v(" 数据类型的判断")]),v._v(" "),a("ul",[a("li",[a("code",[v._v("typeof")]),v._v(" "),a("ul",[a("li",[v._v("可以判断: "),a("code",[v._v("undefined")]),v._v("/ 数值 / 字符串 / 布尔值 / "),a("code",[v._v("function")])]),v._v(" "),a("li",[v._v("不能判断: "),a("code",[v._v("null")]),v._v("与"),a("code",[v._v("object")]),v._v(" "),a("code",[v._v("object")]),v._v("与"),a("code",[v._v("array")])])])]),v._v(" "),a("li",[a("code",[v._v("instanceof")]),v._v(" "),a("ul",[a("li",[v._v("判断对象的具体类型")]),v._v(" "),a("li",[a("code",[v._v("A instanceof B")]),v._v(" 通过检测A与B的原型链来判断"),a("code",[v._v("A")]),v._v("是不是"),a("code",[v._v("B")]),v._v("的实例化对象")])])]),v._v(" "),a("li",[v._v("===：判断 "),a("code",[v._v("null")]),v._v("、"),a("code",[v._v("undefined")])])]),v._v(" "),a("h2",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[v._v("#")]),v._v(" 注意")]),v._v(" "),a("ol",[a("li",[a("code",[v._v("undefined")]),v._v(" 与 "),a("code",[v._v("null")]),v._v("的区别\n"),a("ul",[a("li",[a("code",[v._v("undefined")]),v._v("是变量定义了，但是没有赋值。")]),v._v(" "),a("li",[a("code",[v._v("null")]),v._v(" 变量定义了，且赋值为"),a("code",[v._v("null")]),v._v("。")])])]),v._v(" "),a("li",[v._v("什么时候给变量赋值为"),a("code",[v._v("null")]),v._v("?\n"),a("ul",[a("li",[v._v("定义空对象时")]),v._v(" "),a("li",[v._v("让对象成为垃圾对象（没有任何变量引用的对象，会被自动回收）时")])])])]),v._v(" "),a("h2",{attrs:{id:"什么是数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据"}},[v._v("#")]),v._v(" 什么是数据?")]),v._v(" "),a("ul",[a("li",[v._v("存储在内存中代表特定信息的'东东', 本质上是0101...")]),v._v(" "),a("li",[v._v("数据的特点: 可传递, 可运算")]),v._v(" "),a("li",[v._v("一切皆数据")]),v._v(" "),a("li",[v._v("内存中所有操作的目标: 数据\n"),a("ol",[a("li",[v._v("算术运算")]),v._v(" "),a("li",[v._v("逻辑运算")]),v._v(" "),a("li",[v._v("赋值")]),v._v(" "),a("li",[v._v("运行函数")])])])]),v._v(" "),a("h2",{attrs:{id:"什么是内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是内存"}},[v._v("#")]),v._v(" 什么是内存?")]),v._v(" "),a("ul",[a("li",[v._v("内存条通电后产生的可储存数据的空间(临时的)")]),v._v(" "),a("li",[v._v("内存产生和死亡: 内存条(电路版)==>通电==>产生内存空间==>存储数据==>处理数据==>断电==>内存空间和数据都消失")]),v._v(" "),a("li",[v._v("一块小内存的2个数据\n"),a("ul",[a("li",[v._v("内部存储的数据")]),v._v(" "),a("li",[v._v("地址值")])])]),v._v(" "),a("li",[v._v("内存分类\n"),a("ul",[a("li",[v._v("栈: 全局变量/局部变量")]),v._v(" "),a("li",[v._v("堆: 对象")])])])]),v._v(" "),a("h2",{attrs:{id:"注意-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-2"}},[v._v("#")]),v._v(" 注意")]),v._v(" "),a("ul",[a("li",[a("p",[a("code",[v._v("var a = xxx")]),v._v(";"),a("code",[v._v("a")]),v._v("中保存的是什么？")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("如果"),a("code",[v._v("xxx")]),v._v("是基本数据类型的数据，那么a保存的就是数据的值")])]),v._v(" "),a("li",[a("p",[v._v("如果"),a("code",[v._v("xxx")]),v._v("是引用类型的数据，那么a保存的就是引用数据的存储的地址值")])]),v._v(" "),a("li",[a("p",[v._v("如果"),a("code",[v._v("xxx")]),v._v("是一个变量，那么a就可能出现前面两种情况的任意一种")])])])]),v._v(" "),a("li",[a("p",[v._v("关于引用变量赋值问题")]),v._v(" "),a("ul",[a("li",[v._v("2个引用变量指向同一个对象, 通过一个变量修改对象内部数据, 另一个变量看到的是修改之后的数据")])]),v._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[v._v("eg"),a("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("var")]),v._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("var")]),v._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" obj1\nobj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[v._v("11")]),v._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[v._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 输出11。 两个变量指向一个对象")]),v._v("\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br"),a("span",{staticClass:"line-number"},[v._v("5")]),a("br")])]),a("ul",[a("li",[v._v("2个引用变量指向同一个对象, 让其中一个引用变量指向另一个对象, 另一引用变量依然指向前一个对象")])])]),v._v(" "),a("li",[a("p",[v._v("问题: 在js调用函数时传递变量参数时, 是值传递还是引用传递")]),v._v(" "),a("ul",[a("li",[v._v("理解1: 都是值(基本/地址值)传递")]),v._v(" "),a("li",[v._v("理解2: 可能是值传递, 也可能是引用传递(地址值)")])])])]),v._v(" "),a("hr"),v._v(" "),a("h2",{attrs:{id:"概念介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念介绍"}},[v._v("#")]),v._v(" 概念介绍")]),v._v(" "),a("ol",[a("li",[v._v("内存溢出\n"),a("ul",[a("li",[v._v("一种程序运行时的错误")]),v._v(" "),a("li",[v._v("当程序运行时所需的内存超过了剩余内存，就会抛出内存溢出的错误")])])]),v._v(" "),a("li",[v._v("内存泄露：\n"),a("ul",[a("li",[v._v("占用的内存没有及时释放")]),v._v(" "),a("li",[v._v("内存泄露积累容易导致内存溢出")]),v._v(" "),a("li",[v._v("常见的内存泄露")]),v._v(" "),a("li",[v._v("意外的全局变量 （a = 3 不用var赋值）")]),v._v(" "),a("li",[v._v("没有及时清理计时器或回调函数")]),v._v(" "),a("li",[v._v("闭包")])])])])])}),[],!1,null,null,null);_.default=e.exports}}]);